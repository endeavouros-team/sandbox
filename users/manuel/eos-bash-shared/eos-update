#!/bin/bash

# Package updater for EndeavourOS and Arch.
# Handles db lock file, keyrings, syncing, and optionally AUR with given AUR helper.

echo2()   { echo "$@" >&2 ; }
printf2() { printf "$@" >&2 ; }
WARN()    { echo2 "==> $progname: warning: $1"; }
DIE()     { echo2 "==> $progname: error: $1"; exit 1;  }

SetHelper() {
    for helper in "$@" "$EOS_AUR_HELPER" "$EOS_AUR_HELPER_OTHER" yay paru pacman ; do
        which "${helper%% *}" &>/dev/null && return 0
    done
    WARN "AUR helper not found"
    helper=pacman
}

Cmd() {                           # Show a command, run it, and exit on issues.
    echo2 "==>" "$@"
    "$@" || DIE "'$*' failed."
}

ResetKeyrings() {
    Cmd sudo mv /etc/pacman.d/gnupg /root/pacman-key.bak.$(date +%Y%m%d-%H%M).by.$progname
    Cmd sudo pacman-key --init
    Cmd sudo pacman-key --populate archlinux endeavouros
    Cmd sudo pacman -Syy --noconfirm archlinux-keyring endeavouros-keyring
    Cmd sudo pacman -Syu
    echo2 "Keyrings reset."
    exit 0
}

ClearDatabases() {
    Cmd sudo rm /var/lib/pacman/sync/*
    echo2 "Package databases cleared."
    exit 0
}

OptionCheck() {
    case "$1" in
        --nvidia | --nvidia-auto)
            IsSupportedOS || {
                WARN "sorry, the nvidia check is implemented only in $OS, option $1 ignored."
                return 1
            }
            ;;
    esac
    return 0
}

Options() {
    local opts
    local lopts="aur,clear-databases,dump-options,keyrings-reset,nvidia,nvidia-auto,no-keyring,no-sync,helper:,min-free-bytes:,paru,yay,pacman,help"
    local sopts="h"

    opts="$(/usr/bin/getopt -o=$sopts --longoptions $lopts --name "$progname" -- "$@")" || {
        Options -h
        return 1
    }
    eval set -- "$opts"

    while true ; do
        case "$1" in
            --nvidia)                            OptionCheck "$1" && nvidia=yes ;;
            --nvidia-auto)                       if OptionCheck "$1" ; then
                                                     lsmod | grep -w nvidia >/dev/null && nvidia=yes
                                                 fi
                                                 ;;
            --no-keyring)                        keyring=no ;;
            --no-sync)                           sync=":" ;;
            --keyrings-reset)                    ResetKeyrings ;;
            --clear-databases)                   ClearDatabases ;;
            --min-free-bytes)                    min_free_bytes="$2" ; shift ;;
            --helper)                            SetHelper "$2" ; shift ;;
            --aur)                               SetHelper ;;
            --paru | --yay | --pacman)           SetHelper "${1/--/}" ;;
            --dump-options)
                lopts="${lopts//:/}"
                lopts="--${lopts//,/ --}"
                sopts="${sopts//:/}"
                sopts="$(echo "$sopts" | sed -E 's|([a-z])| -\1|g')"
                echo $lopts $sopts
                exit 0
                ;;

            -h | --help)
                cat <<EOF
$progname is a package updater for EndeavourOS and Arch.

$progname is implemented as a wrapper around commands pacman and optionally yay/paru.
Essentially runs commands 'pacman -Syu' and optionally 'yay -Sua' or 'paru -Sua'.

$progname includes (by default) special help in the following situations:
- A dangling pacman db lock file (/var/lib/pacman/db.lck).
- Disk space availability for updates (with a configurable minimum space).
- Keyring package updating before others.
- Running the 'sync' command after update.

Optional help:
- Can clear package databases in case of contant problems with them.
- Can reset keyrings in case of constant problems with them.
- Updates AUR packages (with option --helper, see Usage below)
- Ad hoc check for Nvidia GPU driver vs. kernel updates:
  - kernel-lts updates ==> nvidia-lts should be updated
  - Nvidia driver:  nvidia  nvidia-lts
  - Kernel:         linux   linux-lts
  (only on EndeavourOS).

Usage: $progname [options]
Options:
  --help, -h         This help.
  --nvidia           Check also nvidia driver vs. kernel updates. Useful only with the Nvidia GPU.
  --nvidia-auto      If nvidia module is in use, automatically apply option --nvidia.
  --clear-databases  Clears package database files.
                     Use this only if package database issues constantly make system update fail.
  --keyrings-reset   Resets Arch and EndeavourOS keyrings.
                     Use this only if keyring issues constantly make system update fail.
  --no-keyring       Do not try to update keyrings first.
  --no-sync          Do not run 'sync' after update.
  --helper           AUR helper name. Supported: yay, paru, pacman.
                     Default: pacman
                     Other AUR helpers supporting option -Sua like yay should work as well.
  --paru             Same as --helper=paru.
  --yay              Same as --helper=yay.
  --aur              Uses the AUR helper configured in /etc/eos-script-lib-yad.conf.
  --pacman           Same as --helper=pacman. Default. (Note: pacman does not support AUR directly).
  --min-free-bytes   Minimum amount of free space (in bytes) that the root partition should have
                     before updating. Otherwise a warning message will be displayed.
                     Default: $min_free_bytes

Tip: create an alias in file ~/.bashrc for eos-update to have the options you need, for example:

     # Enable Nvidia update check, disable sync execution, use paru for AUR updates.
     alias eos-update='eos-update --nvidia --no-sync --paru'

EOF
                exit 0
                ;;
            
            --) shift ; break ;;
        esac
        shift
    done
}

IsSupportedOS() {
    [ "$isSupportedOS" = "yes" ] && return 0
    if [ -r /usr/lib/endeavouros-release ] || [ -n "$(grep -iw endeavouros /etc/*-release)" ] ; then
        OS=EndeavourOS
        isSupportedOS=yes
        return 0
    fi
    isSupportedOS=no
    return 1
}

DiskSpace() {
    local available=$(findmnt / -nbo avail)
    local min=$min_free_bytes

    if [ $available -lt $min ] ; then
        {
            WARN "your root partition (/) has only $available bytes of free space."
            if [ $(du -b -d0 /var/cache/pacman/pkg | awk '{print $1}') -gt $min ] ; then
                printf "\nFor example, cleaning up the package cache may help.\n"
                printf "Command 'sudo paccache -rk1' would do this:"
                paccache -dk1
                printf "Command 'sudo paccache -ruk0' would do this:"
                paccache -duk0
                echo ""
            fi
        } >&2
    fi
}

echo2blue()  { echo2 "${BLUE}$1${RESET}" ; }
echo2green() { echo2 "${GREEN}$1${RESET}" ; }

Main() {
    local progname="${0##*/}"
    source /usr/share/endeavouros/scripts/eos-script-lib-yad || return 1
    local helper="pacman"
    local min_free_bytes=$((1000 * 1000 * 1000))  # default: 1 GB

    local helper2=":"
    local lock=/var/lib/pacman/db.lck
    local rmopt=f
    local isSupportedOS=""
    local OS=""

    local subopts=()
    local afteropts=()
    local keyring=yes                             # user may disable keyring check with --no-keyring
    local nvidia=no                               # user may enable Nvidia check with --nvidia
    local nvidia_opt=""
    local sync="sync"

    local -r RED=$'\e[0;91m'
    local -r GREEN=$'\e[0;92m'
    local -r BLUE=$'\e[0;94m'
    local -r MAGENTA=$'\e[0;95m'
    local -r RESET=$'\e[0m'

    Options "$@"

    [ $nvidia  = yes ] && subopts+=(--nvidia)
    [ $keyring = yes ] && subopts+=(--keyrings)

    echo2blue "$progname: package updater with additional features"

    DiskSpace

    if [ -e $lock ] && fuser $lock &>/dev/null ; then
        rmopt=i
    fi
    if [ "$helper" = "pacman" ] ; then
        echo2green "Updating native apps..."
        sudo bash -c "rm -$rmopt $lock; [ -e $lock ] || { pacman -Sy && eos-update-extras ${subopts[*]} && pacman -Su && $sync ; }"
    else
        echo2green "Updating native and AUR apps..."
        helper2="/usr/bin/sudo -u $LOGNAME $helper -Sua"
        sudo bash -c "rm -$rmopt $lock; [ -e $lock ] || { pacman -Sy && eos-update-extras ${subopts[*]} && pacman -Su && $helper2 ; $sync ; }"
    fi
}

Main "$@"
